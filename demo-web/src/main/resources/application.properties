#debug=true

# LOGGING配置
#logging.config=    # Location of the logging configuration file. For instance `classpath:logback.xml` for Logback
#logging.exception-conversion-word=    %wEx # Conversion word used when logging exceptions.
#logging.file=       # Log file name. For instance `myapp.log`
# Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`
logging.level.com.demo=debug
#logging.path=       # Location of the log file. For instance `/var/log`
#logging.pattern.console=      # Appender pattern for output to the console. Only supported with the default logback setup.
#logging.pattern.file=      # Appender pattern for output to the file. Only supported with the default logback setup.
#logging.pattern.level=      # Appender pattern for log level (default %5p). Only supported with the default logback setup.
#logging.register-shutdown-hook=false


# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=jianshen1234...
spring.datasource.url=jdbc:mysql://localhost:3306/titan?useSSL=true

spring.datasource.other.type=org.apache.tomcat.jdbc.pool.DataSource
spring.datasource.other.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.other.username=root
spring.datasource.other.password=jianshen1234...
spring.datasource.other.url=jdbc:mysql://localhost:3307/demo?useSSL=true


# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.data.jpa.repositories.enabled=true
spring.jpa.database=MYSQL
#这个配置会根据实体类自动生成建表语句,如果建好了,可以关掉
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none
#命名策略,Hibernate 5 以后不支持.naming.strategy这个配置了
spring.jpa.hibernate.naming.implicit-strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.open-in-view=true
spring.jpa.properties.*=
#spring.jpa.show-sql=true
#使用hibernate配置使打印出来的的语句格式化
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

#邮箱配置
# Email (MailProperties)
#编码格式,默认为UTF-8
spring.mail.default-encoding=UTF-8
# SMTP server host. For instance `smtp.example.com`
spring.mail.host=smtp.sina.com
# Session JNDI name. When set, takes precedence to others mail settings.
#spring.mail.jndi-name=
# Login user of the SMTP server.
spring.mail.username=cbkris@sina.com
# Login password of the SMTP server.
spring.mail.password=jianshen1234
# SMTP server port.
#spring.mail.port=
# Additional JavaMail session properties.
spring.mail.properties.*=
#smtp # Protocol used by the SMTP server.
spring.mail.protocol=smtp
# Test that the mail server is available on startup.
spring.mail.test-connection=false 


# REDIS (RedisProperties)
# Redis server host.
spring.redis.host=127.0.0.1 
# Redis server port.
spring.redis.port=6379
# Login password of the redis server.
spring.redis.password=
# Connection timeout in milliseconds.
#spring.redis.timeout=0
# Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379
#spring.redis.url=
# Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.max-redirects=
# Comma-separated list of "host:port" pairs to bootstrap from.
#spring.redis.cluster.nodes=
# Database index used by the connection factory.
#spring.redis.database=0
# Enable SSL support.
#spring.redis.ssl=false
# Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.pool.max-active=8
# Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.pool.max-idle=8
# Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.pool.max-wait=-1
# Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
#spring.redis.pool.min-idle=0
# Name of Redis server.
#spring.redis.sentinel.master=
# Comma-separated list of host:port pairs.
#spring.redis.sentinel.nodes=



#thymeleaf配置
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false
